{"ast":null,"code":"var _jsxFileName = \"/Users/danwarman/Sites/software-engineer-exercise/src/components/catalogue/ProductCard.js\";\nimport React, { Component } from 'react';\nimport { Slide } from 'pure-react-carousel';\nimport placeholderImage from '../..//img/placeholder-2000x2000.png';\n\nclass ProductCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      main_image_src: ''\n    };\n    this.handleImageData = this.handleImageData.bind(this);\n  }\n  /**\n   * Returns a place holder if image path is not returned\n   * TODO: Move handling of data up in to parent component? \n   */\n\n\n  handleImageData(image) {\n    const imageSrc = image.length ? image : placeholderImage;\n    this.setState({\n      main_image_src: imageSrc\n    });\n  }\n\n  componentDidMount() {\n    this.handleImageData(this.props.main_image_src);\n  }\n\n  render() {\n    const _this$props = this.props,\n          key = _this$props.key,\n          product_id = _this$props.product_id,\n          name = _this$props.name,\n          main_image_alt = _this$props.main_image_alt,\n          currency = _this$props.currency,\n          selling_price = _this$props.selling_price;\n    const main_image_src = this.state.main_image_src;\n    const imgStyle = {\n      maxWidth: '100%'\n    };\n    return React.createElement(Slide, {\n      index: key,\n      className: \"ProductCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"ProductCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ProductCardImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: main_image_src,\n      style: imgStyle,\n      alt: main_image_alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ProductCardContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ProductName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      className: \"ProductSellingPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\xA3 \", parseFloat(Math.round(selling_price * 100) / 100).toFixed(2)))));\n  }\n\n}\n\nexport default ProductCard;","map":{"version":3,"sources":["/Users/danwarman/Sites/software-engineer-exercise/src/components/catalogue/ProductCard.js"],"names":["React","Component","Slide","placeholderImage","ProductCard","constructor","props","state","main_image_src","handleImageData","bind","image","imageSrc","length","setState","componentDidMount","render","key","product_id","name","main_image_alt","currency","selling_price","imgStyle","maxWidth","parseFloat","Math","round","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACD;AAED;;;;;;AAIAD,EAAAA,eAAe,CAACE,KAAD,EAAQ;AACrB,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GAAeF,KAAf,GAAuBR,gBAAxC;AACA,SAAKW,QAAL,CAAe;AAACN,MAAAA,cAAc,EAAEI;AAAjB,KAAf;AAED;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,eAAL,CAAqB,KAAKH,KAAL,CAAWE,cAAhC;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,wBACoE,KAAKV,KADzE;AAAA,UACCW,GADD,eACCA,GADD;AAAA,UACMC,UADN,eACMA,UADN;AAAA,UACkBC,IADlB,eACkBA,IADlB;AAAA,UACwBC,cADxB,eACwBA,cADxB;AAAA,UACwCC,QADxC,eACwCA,QADxC;AAAA,UACkDC,aADlD,eACkDA,aADlD;AAAA,UAECd,cAFD,GAEoB,KAAKD,KAFzB,CAECC,cAFD;AAIP,UAAMe,QAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAE;AADK,KAAjB;AAIA,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEP,GAAd;AAAmB,MAAA,SAAS,EAAC,sBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAET,cAAV;AAA0B,MAAA,KAAK,EAAEe,QAAjC;AAA2C,MAAA,GAAG,EAAEH,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,IAA5B,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAsCM,UAAU,CAACC,IAAI,CAACC,KAAL,CAAYL,aAAa,GAAG,GAA5B,IAAmC,GAApC,CAAV,CAAmDM,OAAnD,CAA2D,CAA3D,CAAtC,CAFF,CAJF,CADF,CADF;AAaD;;AA5CiC;;AA+CpC,eAAexB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Slide } from 'pure-react-carousel';\nimport placeholderImage from '../..//img/placeholder-2000x2000.png';\n\nclass ProductCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        main_image_src: ''\n    };\n    this.handleImageData = this.handleImageData.bind(this);\n  }\n\n  /**\n   * Returns a place holder if image path is not returned\n   * TODO: Move handling of data up in to parent component? \n   */\n  handleImageData(image) {\n    const imageSrc = image.length ? image : placeholderImage;\n    this.setState( {main_image_src: imageSrc});\n\n  }\n\n  componentDidMount() {\n      this.handleImageData(this.props.main_image_src)\n  }\n\n  render() {\n    const { key, product_id, name, main_image_alt, currency, selling_price } = this.props;\n    const { main_image_src } = this.state;\n\n    const imgStyle = {\n      maxWidth: '100%'\n    };\n\n    return (\n      <Slide index={key} className='ProductCardContainer'>\n        <article className='ProductCard'>\n          <div className='ProductCardImage'>\n            <img src={main_image_src} style={imgStyle} alt={main_image_alt} />\n          </div>\n          <div className='ProductCardContent'>\n            <p className='ProductName'>{name}</p>\n            <p className='ProductSellingPrice'>Â£ {parseFloat(Math.round( selling_price * 100) / 100).toFixed(2)}</p>\n          </div>\n        </article>\n      </Slide>\n    );\n  }\n}\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}