{"ast":null,"code":"var _jsxFileName = \"/Users/danwarman/Sites/software-engineer-exercise/src/components/catalogue/ProductCard.js\";\nimport React, { Component } from 'react'; // import { Slide } from 'pure-react-carousel';\n\nimport placeholderImage from '../..//img/placeholder-2000x2000.png';\n\nclass ProductCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      main_image_src: ''\n    };\n    this.handleImageData = this.handleImageData.bind(this);\n  }\n  /**\n   * Returns a place holder if image path is not returned\n   * TODO: Move handling of data up in to parent component? \n   */\n\n\n  handleImageData(image) {\n    const imageSrc = image.length ? image : placeholderImage;\n    this.setState({\n      main_image_src: imageSrc\n    });\n  }\n\n  componentDidMount() {\n    this.handleImageData(this.props.main_image_src);\n  }\n\n  render() {\n    const _this$props = this.props,\n          key = _this$props.key,\n          product_id = _this$props.product_id,\n          name = _this$props.name,\n          main_image_alt = _this$props.main_image_alt,\n          currency = _this$props.currency,\n          selling_price = _this$props.selling_price,\n          onClick = _this$props.onClick;\n    const main_image_src = this.state.main_image_src; // TODO: Move in to CSS\n\n    const imgStyle = {\n      maxWidth: '100%'\n    };\n    return (//   <Slide index={key} className='ProductCardContainer'>\n      //     <article className='ProductCard' onClick={onClick}>\n      //       <div className='ProductCardImage'>\n      //         <img src={main_image_src} style={imgStyle} alt={main_image_alt} />\n      //       </div>\n      //       <div className='ProductCardContent'>\n      //         <p className='ProductName'>{name}</p>\n      //         <p className='ProductSellingPrice'>£ {parseFloat(Math.round( selling_price * 100) / 100).toFixed(2)}</p>\n      //       </div>\n      //     </article>\n      //   </Slide>\n      React.createElement(\"div\", {\n        index: key,\n        className: \"ProductCardContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        className: \"ProductCard\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ProductCardImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: main_image_src,\n        style: imgStyle,\n        alt: main_image_alt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ProductCardContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"ProductName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, name), React.createElement(\"p\", {\n        className: \"ProductSellingPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\\xA3 \", parseFloat(Math.round(selling_price * 100) / 100).toFixed(2)))))\n    );\n  }\n\n}\n\nexport default ProductCard;","map":{"version":3,"sources":["/Users/danwarman/Sites/software-engineer-exercise/src/components/catalogue/ProductCard.js"],"names":["React","Component","placeholderImage","ProductCard","constructor","props","state","main_image_src","handleImageData","bind","image","imageSrc","length","setState","componentDidMount","render","key","product_id","name","main_image_alt","currency","selling_price","onClick","imgStyle","maxWidth","parseFloat","Math","round","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACD;AAED;;;;;;AAIAD,EAAAA,eAAe,CAACE,KAAD,EAAQ;AACrB,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GAAeF,KAAf,GAAuBR,gBAAxC;AACA,SAAKW,QAAL,CAAe;AAACN,MAAAA,cAAc,EAAEI;AAAjB,KAAf;AAED;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,eAAL,CAAqB,KAAKH,KAAL,CAAWE,cAAhC;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,wBAC6E,KAAKV,KADlF;AAAA,UACCW,GADD,eACCA,GADD;AAAA,UACMC,UADN,eACMA,UADN;AAAA,UACkBC,IADlB,eACkBA,IADlB;AAAA,UACwBC,cADxB,eACwBA,cADxB;AAAA,UACwCC,QADxC,eACwCA,QADxC;AAAA,UACkDC,aADlD,eACkDA,aADlD;AAAA,UACiEC,OADjE,eACiEA,OADjE;AAAA,UAECf,cAFD,GAEoB,KAAKD,KAFzB,CAECC,cAFD,EAIP;;AACA,UAAMgB,QAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAE;AADK,KAAjB;AAIA,WACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AAAK,QAAA,KAAK,EAAER,GAAZ;AAAiB,QAAA,SAAS,EAAC,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAiC,QAAA,OAAO,EAAEM,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEf,cAAV;AAA0B,QAAA,KAAK,EAAEgB,QAAjC;AAA2C,QAAA,GAAG,EAAEJ,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BD,IAA5B,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCO,UAAU,CAACC,IAAI,CAACC,KAAL,CAAYN,aAAa,GAAG,GAA5B,IAAmC,GAApC,CAAV,CAAmDO,OAAnD,CAA2D,CAA3D,CAAtC,CAFF,CAJF,CADF;AAbF;AAyBD;;AAzDiC;;AA4DpC,eAAezB,WAAf","sourcesContent":["import React, { Component } from 'react';\n// import { Slide } from 'pure-react-carousel';\nimport placeholderImage from '../..//img/placeholder-2000x2000.png';\n\nclass ProductCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        main_image_src: ''\n    };\n    this.handleImageData = this.handleImageData.bind(this);\n  }\n\n  /**\n   * Returns a place holder if image path is not returned\n   * TODO: Move handling of data up in to parent component? \n   */\n  handleImageData(image) {\n    const imageSrc = image.length ? image : placeholderImage;\n    this.setState( {main_image_src: imageSrc});\n\n  }\n\n  componentDidMount() {\n      this.handleImageData(this.props.main_image_src)\n  }\n\n  render() {\n    const { key, product_id, name, main_image_alt, currency, selling_price, onClick } = this.props;\n    const { main_image_src } = this.state;\n\n    // TODO: Move in to CSS\n    const imgStyle = {\n      maxWidth: '100%'\n    };\n\n    return (\n    //   <Slide index={key} className='ProductCardContainer'>\n    //     <article className='ProductCard' onClick={onClick}>\n    //       <div className='ProductCardImage'>\n    //         <img src={main_image_src} style={imgStyle} alt={main_image_alt} />\n    //       </div>\n    //       <div className='ProductCardContent'>\n    //         <p className='ProductName'>{name}</p>\n    //         <p className='ProductSellingPrice'>£ {parseFloat(Math.round( selling_price * 100) / 100).toFixed(2)}</p>\n    //       </div>\n    //     </article>\n    //   </Slide>\n\n      <div index={key} className='ProductCardContainer'>\n        <article className='ProductCard' onClick={onClick}>\n          <div className='ProductCardImage'>\n            <img src={main_image_src} style={imgStyle} alt={main_image_alt} />\n          </div>\n          <div className='ProductCardContent'>\n            <p className='ProductName'>{name}</p>\n            <p className='ProductSellingPrice'>£ {parseFloat(Math.round( selling_price * 100) / 100).toFixed(2)}</p>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}